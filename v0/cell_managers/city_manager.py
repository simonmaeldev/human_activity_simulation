from typing import List
from .base_manager import BaseCellManager
from cell import Cell, CellType
from population import Population, PopulationType
from constants import MAX_HUMAN_DENSITY, COMMUTE_POLLUTION_MULTIPLIER

class CityManager(BaseCellManager):
    """Manages city cells and their specific behaviors"""
    
    def calculate_density(self, cell: Cell) -> float:
        """Calculate current population density"""
        human_pop = next((p for p in cell.populations 
                         if p.type == PopulationType.HUMANS), None)
        return human_pop.size / MAX_HUMAN_DENSITY if human_pop else 0
    
    def can_expand(self, cell: Cell) -> bool:
        """Check if city can expand"""
        density = self.calculate_density(cell)
        return (density > 0.8 and  # Over 80% capacity
                cell.health_level > self.config.health_thresholds["good"] and
                cell.resource_level > self.config.population_growth_decline_thresholds["growth"])
    
    def calculate_pollution_generation(self, cell: Cell) -> float:
        """Calculate pollution generated by city activities"""
        human_pop = next((p for p in cell.populations 
                         if p.type == PopulationType.HUMANS), None)
        if not human_pop:
            return 0.0
            
        base_pollution = human_pop.pollution_generation_rate * human_pop.size
        return base_pollution * COMMUTE_POLLUTION_MULTIPLIER
    
    def can_convert_to(self, cell: Cell, target_type: CellType) -> bool:
        """Check if land can be converted to city"""
        if cell.cell_type != CellType.LAND or target_type != CellType.CITY:
            return False
            
        return (cell.health_level > self.config.health_thresholds["good"] and
                cell.resource_level > self.config.cell_conversion_thresholds["land_to_city"])
